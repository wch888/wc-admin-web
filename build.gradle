group 'com.wc'
version '1.0.0-SNAPSHOT'



repositories {
    mavenLocal()
    maven {
        name "nexus"
        url "http://120.24.234.117:8081/nexus/content/groups/public/"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "war"

apply plugin: 'jettyEclipse'
jettyEclipse {
    automaticReload = true
    scanIntervalInSeconds = 15
    httpPort = 9898
    stopPort = 9899
    stopKey = 9899
}

buildDir "target"

dependencies {
    compile('com.wc:wc-service:1.0.0-SNAPSHOT')
//    compile project(':wc-service')
    //测试
    testCompile 'org.testng:testng:6.4'
    testCompile 'org.springframework:spring-test:3.1.4.RELEASE'

    //logback 日志
    //spring mybatis
    compile 'org.springframework:spring-beans:3.1.4.RELEASE'
    compile 'org.springframework:spring-web:3.1.4.RELEASE'
    compile 'org.springframework:spring-webmvc:3.1.4.RELEASE'
    compile 'org.springframework:spring-context:3.1.4.RELEASE'
    compile 'org.springframework:spring-tx:3.1.4.RELEASE'
    compile 'org.springframework.security:spring-security-core:3.1.4.RELEASE'

    compile 'net.coobird:thumbnailator:0.4.7'

    compile 'org.aspectj:aspectjrt:1.7.0'
    compile 'org.aspectj:aspectjweaver:1.7.0'

    compile 'javax.servlet:servlet-api:2.5'
    compile 'javax.servlet:jstl:1.1.2'
    compile 'commons-fileupload:commons-fileupload:1.2.2'
    compile 'commons-codec:commons-codec:1.10'
    compile 'taglibs:standard:1.1.2'

    compile 'net.sf.json-lib:json-lib:2.4:jdk15'

    compile 'com.github.sgroschupf:zkclient:0.1'
    compile 'org.apache.zookeeper:zookeeper:3.3.6'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.5'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.5'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.5'
    compile 'javax.servlet:jsp-api:2.0'
    compile 'org.quartz-scheduler:quartz:1.8.4'

    compile 'com.thoughtworks.xstream:xstream:1.4.3'
    compile 'com.upyun:java-sdk:3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.poi:poi:3.7'
}

task "create-dirs" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
task copyJars(type: Copy) {
    from configurations.runtime
    into "lib" // 目标位置
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    options.encoding = "UTF-8"
}
